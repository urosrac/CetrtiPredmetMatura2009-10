//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2443
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace sportna_dvorana {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSet1 : DataSet {
        
        private sektorjiDataTable tablesektorji;
        
        public DataSet1() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSet1(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["sektorji"] != null)) {
                    this.Tables.Add(new sektorjiDataTable(ds.Tables["sektorji"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sektorjiDataTable sektorji {
            get {
                return this.tablesektorji;
            }
        }
        
        public override DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["sektorji"] != null)) {
                this.Tables.Add(new sektorjiDataTable(ds.Tables["sektorji"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablesektorji = ((sektorjiDataTable)(this.Tables["sektorji"]));
            if ((this.tablesektorji != null)) {
                this.tablesektorji.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet1.xsd";
            this.Locale = new System.Globalization.CultureInfo("sl-SI");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablesektorji = new sektorjiDataTable();
            this.Tables.Add(this.tablesektorji);
        }
        
        private bool ShouldSerializesektorji() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void sektorjiRowChangeEventHandler(object sender, sektorjiRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sektorjiDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnst_sektorja;
            
            private DataColumn columnime_sektorja;
            
            private DataColumn columnst_gledalcev;
            
            internal sektorjiDataTable() : 
                    base("sektorji") {
                this.InitClass();
            }
            
            internal sektorjiDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn st_sektorjaColumn {
                get {
                    return this.columnst_sektorja;
                }
            }
            
            internal DataColumn ime_sektorjaColumn {
                get {
                    return this.columnime_sektorja;
                }
            }
            
            internal DataColumn st_gledalcevColumn {
                get {
                    return this.columnst_gledalcev;
                }
            }
            
            public sektorjiRow this[int index] {
                get {
                    return ((sektorjiRow)(this.Rows[index]));
                }
            }
            
            public event sektorjiRowChangeEventHandler sektorjiRowChanged;
            
            public event sektorjiRowChangeEventHandler sektorjiRowChanging;
            
            public event sektorjiRowChangeEventHandler sektorjiRowDeleted;
            
            public event sektorjiRowChangeEventHandler sektorjiRowDeleting;
            
            public void AddsektorjiRow(sektorjiRow row) {
                this.Rows.Add(row);
            }
            
            public sektorjiRow AddsektorjiRow(string ime_sektorja, int st_gledalcev) {
                sektorjiRow rowsektorjiRow = ((sektorjiRow)(this.NewRow()));
                rowsektorjiRow.ItemArray = new object[] {
                        null,
                        ime_sektorja,
                        st_gledalcev};
                this.Rows.Add(rowsektorjiRow);
                return rowsektorjiRow;
            }
            
            public sektorjiRow FindByst_sektorja(int st_sektorja) {
                return ((sektorjiRow)(this.Rows.Find(new object[] {
                            st_sektorja})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                sektorjiDataTable cln = ((sektorjiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new sektorjiDataTable();
            }
            
            internal void InitVars() {
                this.columnst_sektorja = this.Columns["st_sektorja"];
                this.columnime_sektorja = this.Columns["ime_sektorja"];
                this.columnst_gledalcev = this.Columns["st_gledalcev"];
            }
            
            private void InitClass() {
                this.columnst_sektorja = new DataColumn("st_sektorja", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnst_sektorja);
                this.columnime_sektorja = new DataColumn("ime_sektorja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnime_sektorja);
                this.columnst_gledalcev = new DataColumn("st_gledalcev", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnst_gledalcev);
                this.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[] {
                                this.columnst_sektorja}, true));
                this.columnst_sektorja.AutoIncrement = true;
                this.columnst_sektorja.AllowDBNull = false;
                this.columnst_sektorja.Unique = true;
            }
            
            public sektorjiRow NewsektorjiRow() {
                return ((sektorjiRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new sektorjiRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(sektorjiRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sektorjiRowChanged != null)) {
                    this.sektorjiRowChanged(this, new sektorjiRowChangeEvent(((sektorjiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sektorjiRowChanging != null)) {
                    this.sektorjiRowChanging(this, new sektorjiRowChangeEvent(((sektorjiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sektorjiRowDeleted != null)) {
                    this.sektorjiRowDeleted(this, new sektorjiRowChangeEvent(((sektorjiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sektorjiRowDeleting != null)) {
                    this.sektorjiRowDeleting(this, new sektorjiRowChangeEvent(((sektorjiRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovesektorjiRow(sektorjiRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sektorjiRow : DataRow {
            
            private sektorjiDataTable tablesektorji;
            
            internal sektorjiRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablesektorji = ((sektorjiDataTable)(this.Table));
            }
            
            public int st_sektorja {
                get {
                    return ((int)(this[this.tablesektorji.st_sektorjaColumn]));
                }
                set {
                    this[this.tablesektorji.st_sektorjaColumn] = value;
                }
            }
            
            public string ime_sektorja {
                get {
                    try {
                        return ((string)(this[this.tablesektorji.ime_sektorjaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesektorji.ime_sektorjaColumn] = value;
                }
            }
            
            public int st_gledalcev {
                get {
                    try {
                        return ((int)(this[this.tablesektorji.st_gledalcevColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesektorji.st_gledalcevColumn] = value;
                }
            }
            
            public bool Isime_sektorjaNull() {
                return this.IsNull(this.tablesektorji.ime_sektorjaColumn);
            }
            
            public void Setime_sektorjaNull() {
                this[this.tablesektorji.ime_sektorjaColumn] = System.Convert.DBNull;
            }
            
            public bool Isst_gledalcevNull() {
                return this.IsNull(this.tablesektorji.st_gledalcevColumn);
            }
            
            public void Setst_gledalcevNull() {
                this[this.tablesektorji.st_gledalcevColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sektorjiRowChangeEvent : EventArgs {
            
            private sektorjiRow eventRow;
            
            private DataRowAction eventAction;
            
            public sektorjiRowChangeEvent(sektorjiRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public sektorjiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
